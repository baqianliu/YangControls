<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="clr-namespace:MaxwellControl.Controls"
	>

	<ResourceDictionary.MergedDictionaries>
		<themes:SharedResourceDictionary Source="pack://application:,,,/MaxwellControl;component/Themes/Styles/Base/BaseStyle.xaml"/>
		<themes:SharedResourceDictionary Source="pack://application:,,,/MaxwellControl;component/Themes/Basic/Geometries.xaml"/>
	</ResourceDictionary.MergedDictionaries>

	<Style x:Key="ExpanderDownHeaderStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Background" Value="{DynamicResource ThirdlyLightGradientBrush}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
		<Setter Property="controls:BorderElement.CornerRadius" Value="3"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border x:Name="Parrt_Border" BorderBrush="{TemplateBinding BorderBrush}"
							Background="{TemplateBinding Background}" 
							BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding controls:BorderElement.CornerRadius}"
							Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="50"/>
							</Grid.ColumnDefinitions>
							<ContentPresenter  Margin="{TemplateBinding Padding}" Grid.Column="0" RecognizesAccessKey="True" 
											   SnapsToDevicePixels="True" VerticalAlignment="Center"/>
							<Path Name="PART_ButtonPath" IsHitTestVisible="True" HorizontalAlignment="Right"  
								  Fill="{DynamicResource TextBrush}" Data="{DynamicResource DownTriangleGeometry}" Width="10" Height="10"
								  VerticalAlignment="Center" Stretch="Uniform" Grid.Column="1" Margin="{TemplateBinding Padding}"/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="true">
							<Setter Property="Data" TargetName="PART_ButtonPath" Value="{DynamicResource UpTriangleGeometry}"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ExpanderUpHeaderStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Background" Value="{DynamicResource ThirdlyLightGradientBrush}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
		<Setter Property="controls:BorderElement.CornerRadius" Value="3"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border x:Name="Parrt_Border" BorderBrush="{TemplateBinding BorderBrush}"
							Background="{TemplateBinding Background}" 
							BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding controls:BorderElement.CornerRadius}"
							Height="{TemplateBinding Height}" Width="{TemplateBinding Width}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="50"/>
							</Grid.ColumnDefinitions>
							<ContentPresenter  Margin="{TemplateBinding Padding}" Grid.Column="0" RecognizesAccessKey="True" 
											   SnapsToDevicePixels="True" VerticalAlignment="Center"/>
							<Path Name="PART_ButtonPath" IsHitTestVisible="True" HorizontalAlignment="Right"  
								  Fill="{DynamicResource TextBrush}" Data="{DynamicResource UpTriangleGeometry}" Width="10" Height="10"
								  VerticalAlignment="Center" Stretch="Uniform" Grid.Column="1" Margin="{TemplateBinding Padding}"/>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="true">
							<Setter Property="Data" TargetName="PART_ButtonPath" Value="{DynamicResource DownTriangleGeometry}"/>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type Expander}">
		<Setter Property="controls:TitleElement.TitleHeight" Value="30"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Expander}">
					<Border BorderBrush="Transparent" BorderThickness="0" Background="Transparent" Width="{TemplateBinding Width}">
						<Grid x:Name="PART_GridRoot">
							<Grid.RowDefinitions>
								<RowDefinition x:Name="Row0" Height="Auto"/>
								<RowDefinition x:Name="Row1" Height="Auto"/>
							</Grid.RowDefinitions>
							<Grid.ColumnDefinitions>
								<ColumnDefinition x:Name="Col0" Width="*"/>
								<ColumnDefinition x:Name="Col1" Width="0"/>
							</Grid.ColumnDefinitions>
							<ToggleButton x:Name="PART_Button" Style="{DynamicResource ExpanderDownHeaderStyle}"
										  Height="{TemplateBinding controls:TitleElement.TitleHeight}" 
										  ContentTemplate="{TemplateBinding HeaderTemplate}"
										  ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}" 
										  Content="{TemplateBinding Header}" Grid.Row="0"
										  controls:BorderElement.CornerRadius="3 3 0 0" FontSize="14" Foreground="{DynamicResource TextBrush}"
										  IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
										  HorizontalContentAlignment="Left" VerticalContentAlignment="Center" Padding="10 0"/>
							<Border x:Name="PART_ContentBorder" CornerRadius="0 0 3 3" Visibility="Collapsed" 
									BorderBrush="{DynamicResource BorderBrush}" BorderThickness="1 0 1 1" 
									Background="{DynamicResource PrimaryDefaultBrush}" Grid.Row="1">
								<ContentPresenter x:Name="PART_Content"  Visibility="Collapsed"
												  Margin="{TemplateBinding Padding}" 
												  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</Border>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="True" >
							<Setter Property="Visibility" Value="Visible" TargetName="PART_ContentBorder"/>
							<Setter Property="Visibility" Value="Visible" TargetName="PART_Content"/>
						</Trigger>
						<Trigger Property="IsExpanded" Value="False">
							<Setter TargetName="PART_Button" Property="controls:BorderElement.CornerRadius" Value="3"/>
						</Trigger>
						<Trigger Property="Content" Value="{x:Null}">
							<Setter TargetName="PART_Button" Property="controls:BorderElement.CornerRadius" Value="3"/>
						</Trigger>

						<Trigger Property="ExpandDirection" Value="Up">
							<Setter Property="Style" Value="{StaticResource ExpanderUpHeaderStyle}" TargetName="PART_Button"/>
							<Setter Property="controls:BorderElement.CornerRadius" Value="0 0 3 3" TargetName="PART_Button"/>
							<Setter Property="CornerRadius" Value="3 3 0 0" TargetName="PART_ContentBorder"/>
							<Setter Property="BorderThickness" Value="1 1 1 0" TargetName="PART_ContentBorder"/>
							<Setter Property="Grid.Row" Value="0" TargetName="PART_ContentBorder"/>
							<Setter Property="Grid.Row" Value="1" TargetName="PART_Button"/>
						</Trigger>

						<Trigger Property="ExpandDirection" Value="Right">
							<Setter Property="Grid.LayoutTransform"	TargetName="PART_GridRoot">
								<Setter.Value>
									<RotateTransform Angle="-90"/>
								</Setter.Value>
							</Setter>
							<Setter Property="ContentPresenter.LayoutTransform" TargetName="PART_Content">
								<Setter.Value>
									<RotateTransform Angle="90"/>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="ExpandDirection" Value="Left">
							<Setter Property="Grid.LayoutTransform"	TargetName="PART_GridRoot">
								<Setter.Value>
									<RotateTransform Angle="90"/>
								</Setter.Value>
							</Setter>
							<Setter Property="ContentPresenter.LayoutTransform" TargetName="PART_Content">
								<Setter.Value>
									<RotateTransform Angle="-90"/>
								</Setter.Value>
							</Setter>
						</Trigger>

					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>
